{"version":3,"sources":["component/Gantt/GanttChart.tsx","component/Gantt/fetch-event-reducer.ts","utils/request.ts","services/gantt.ts","component/Gantt/useFetchEvent.ts","component/Gantt/GanttFilter.tsx","component/Gantt/GanttToolBar.tsx","component/Gantt/index.ts","component/Gantt/GanttContainer.tsx","component/App/App.tsx","serviceWorker.ts","index.tsx"],"names":["GanttChart","props","console","log","gantt","ext","zoom","init","levels","name","scale_height","min_column_width","scales","unit","step","format","value","setLevel","disableHighlight","templates","timeline_cell_class","item","date","getDay","setZoom","useEffect","config","xml_date","server_utc","readonly","columns","label","min_width","tree","align","i18n","setLocale","plugins","tooltip","open_tree_initially","tooltip_text","start","end","task","text","parse","data","render","react_default","a","createElement","Fragment","className","id","fetchEventReducer","state","action","type","Object","objectSpread2","loading","error","payload","Error","service","axios","create","timeout","interceptors","request","use","Promise","reject","response","res","code","message","getData","url","method","Option","Select","GanttFilter","_useState","useState","_useState2","slicedToArray","inputValue","setInputValue","_useState3","_useState4","dept","setDept","_useState5","_useState6","useLayoutEffect","onBeforeTaskDisplay","attachEvent","username","indexOf","refreshData","detachEvent","es_form","layout","onFinish","values","person","Item","input","style","width","allowClear","es_button","htmlType","es_select","onChange","GanttToolBar","es_radio","Group","defaultValue","buttonStyle","e","onZoomChange","target","Button","Gantt","currentZoom","setCurrentZoom","setData","_useFetchEvent","params","_useReducer","useReducer","_useReducer2","dispatch","cancel","_ref","asyncToGenerator","regenerator_default","mark","_callee","index","_iterator","_step","_step$value","key","wrap","_context","prev","next","sent","filter","start_time","end_time","map","start_date","end_date","task_name","duration","fate","Map","length","get","set","uid","parent","createForOfIteratorHelper","entries","s","n","done","push","err","f","t0","stop","apply","this","arguments","useFetchEvent","Gantt_GanttFilter","onSortByUsername","Gantt_GanttToolBar","Gantt_GanttChart","App","component_Gantt","Boolean","window","location","hostname","match","ReactDOM","component_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d95862b5.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport \"dhtmlx-gantt\";\r\nimport \"./Gantt.css\";\r\n// import 'dhtmlx-gantt/codebase/ext/dhtmlxgantt_marker';\r\nimport \"dhtmlx-gantt/codebase/skins/dhtmlxgantt_skyblue.css\";\r\n// import data from './data/data';\r\nimport { GanttStatic } from \"dhtmlx-gantt\";\r\n\r\ndeclare var gantt: GanttStatic;\r\n\r\ninterface AppProps {\r\n  zoom: string;\r\n  data: object;\r\n}\r\n\r\nconst GanttChart: React.FC<AppProps> = (props) => {\r\n  console.log(\"props\", props);\r\n\r\n  const initZoom = () => {\r\n    gantt.ext.zoom.init({\r\n      levels: [\r\n        // {\r\n        //   name: \"Hours\",\r\n        //   scale_height: 60,\r\n        //   min_column_width: 30,\r\n        //   scales: [\r\n        //     { unit: \"day\", step: 1, format: \"%d %M\" },\r\n        //     { unit: \"hour\", step: 1, format: \"%H\" },\r\n        //   ],\r\n        // },\r\n        {\r\n          name: \"Days\",\r\n          scale_height: 60,\r\n          min_column_width: 70,\r\n          scales: [\r\n            { unit: \"week\", step: 1, format: \"Week #%W\" },\r\n            { unit: \"day\", step: 1, format: \"%d %M\" },\r\n          ],\r\n        },\r\n        {\r\n          name: \"Months\",\r\n          scale_height: 60,\r\n          min_column_width: 70,\r\n          scales: [\r\n            { unit: \"month\", step: 1, format: \"%F\" },\r\n            { unit: \"week\", step: 1, format: \"#%W\" },\r\n          ],\r\n        },\r\n        {\r\n          name: \"Years\",\r\n          scale_height: 60,\r\n          min_column_width: 70,\r\n          scales: [\r\n            { unit: \"year\", step: 1, format: \"%Y\" },\r\n            { unit: \"month\", step: 1, format: \"#%F\" },\r\n          ],\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n  initZoom();\r\n\r\n  const setZoom = (value: string) => {\r\n    gantt.ext.zoom.setLevel(value);\r\n    // 突出周末颜色\r\n    const disableHighlight = value === \"Years\" || value === \"Months\";\r\n    (gantt.templates as any).timeline_cell_class = function (\r\n      item: any,\r\n      date: Date\r\n    ): string {\r\n      if (!disableHighlight && (date.getDay() === 0 || date.getDay() === 6)) {\r\n        return \"weekend\";\r\n      }\r\n      return \"\";\r\n    };\r\n  };\r\n\r\n  setZoom(props.zoom);\r\n\r\n  useEffect(() => {\r\n    gantt.config.xml_date = \"%Y-%m-%d %H:%i\";\r\n    gantt.config.server_utc = true;\r\n    // gantt.config.smart_rendering = false;\r\n    gantt.config.readonly = true;\r\n    gantt.config.columns = [\r\n      {\r\n        name: \"text\",\r\n        label: \"任务名称\",\r\n        min_width: 300,\r\n        tree: true,\r\n      },\r\n      {\r\n        name: \"start_date\",\r\n        label: \"开始日期\",\r\n        align: \"center\",\r\n        min_width: 100,\r\n      },\r\n      {\r\n        name: \"end_date\",\r\n        label: \"结束日期\",\r\n        align: \"center\",\r\n        min_width: 100,\r\n      },\r\n      {\r\n        name: \"username\",\r\n        label: \"指派给\",\r\n        align: \"center\",\r\n        min_width: 100,\r\n      },\r\n      {\r\n        name: \"duration\",\r\n        label: \"持续天数\",\r\n        align: \"center\",\r\n      },\r\n      {\r\n        name: \"progress\",\r\n        label: \"进度\",\r\n        align: \"center\",\r\n      },\r\n    ];\r\n    gantt.i18n.setLocale(\"cn\");\r\n    gantt.plugins({\r\n      tooltip: true,\r\n    });\r\n    gantt.config.open_tree_initially = true;\r\n    gantt.init(\"gantt\");\r\n\r\n    gantt.templates.tooltip_text = function (\r\n      start: Date,\r\n      end: Date,\r\n      task: any\r\n    ) {\r\n      return task.text;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    gantt.parse({\r\n      data: props.data,\r\n    });\r\n    gantt.render();\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"gantt-box\">\r\n        <div id=\"gantt\" />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GanttChart;\r\n","import GanttTask from \"./GanttTask\";\r\n\r\ninterface State {\r\n\tdata: GanttTask[];\r\n\tloading: boolean;\r\n\terror: boolean;\r\n}\r\n\r\ntype Action =\r\n\t| { type: 'FETCH_INIT' }\r\n\t| { type: 'FETCH_SUCCESS'; payload: GanttTask[] }\r\n\t| { type: 'FETCH_ERROR' }\r\n\r\nconst fetchEventReducer = (state: State, action: Action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'FETCH_INIT':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true,\r\n\t\t\t\terror: false\r\n\t\t\t};\r\n\t\tcase 'FETCH_SUCCESS':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\terror: false,\r\n\t\t\t\tdata: action.payload,\r\n\t\t\t};\r\n\t\tcase 'FETCH_ERROR':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\terror: true,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\tthrow new Error('error');\r\n\t}\r\n};\r\n\r\nexport {\r\n\tfetchEventReducer\r\n}\r\n","import axios from 'axios'\r\nimport { message } from 'antd';\r\n\r\nconst service = axios.create({\r\n  // baseURL: '',\r\n  timeout: 5000\r\n})\r\n\r\nservice.interceptors.request.use(\r\n  config => {\r\n    return config\r\n  },\r\n  error => {\r\n    console.log(error)\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\nservice.interceptors.response.use(\r\n  response => {\r\n    const res = response.data\r\n    if (res.code !== 200) {\r\n      message.error(res.message)\r\n    } else {\r\n      return res\r\n    }\r\n  },\r\n  error => {\r\n    message.error(error.message)\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\nexport default service","import request from '../utils/request'\r\n\r\nexport function getData(data: Object) {\r\n  return request({\r\n    url: '/zentao/gantt',\r\n    method: 'post',\r\n    data,\r\n  })\r\n}","import { useReducer, useEffect } from \"react\";\r\nimport { fetchEventReducer } from \"./fetch-event-reducer\";\r\nimport { getData } from \"../../services/gantt\";\r\nimport GanttTask from \"./GanttTask\";\r\nimport axios from \"axios\";\r\n\r\nconst useFetchEvent = (params: Object) => {\r\n  const [state, dispatch] = useReducer(fetchEventReducer, {\r\n    data: [] as GanttTask[],\r\n    loading: false,\r\n    error: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    let cancel = false;\r\n\r\n    const init = async () => {\r\n      dispatch({ type: \"FETCH_INIT\" });\r\n      try {\r\n        const res = await getData(params);\r\n        let { data } = res;\r\n        data = data\r\n          .filter(\r\n            (item: any) =>\r\n              item.start_time !== \"0000-00-00\" && item.end_time !== \"0000-00-00\"\r\n          )\r\n          .map((item: any) => {\r\n            return {\r\n              ...item,\r\n              start_date: item.start_time,\r\n              end_date: item.end_time,\r\n              text: item.task_name,\r\n              duration: item.fate,\r\n            };\r\n          });\r\n        // 树形结构\r\n        const person = new Map();\r\n        for (let index = 0; index < data.length; index++) {\r\n          const item = data[index];\r\n          if (!person.get(item.username)) {\r\n            person.set(item.username, item.uid);\r\n          }\r\n          item.parent = item.uid;\r\n        }\r\n        for (const [key, value] of person.entries() as any) {\r\n          data.push({\r\n            username: key,\r\n            text: key,\r\n            id: value,\r\n          })\r\n        }\r\n\r\n        console.log(\"data: \", data);\r\n\r\n        if (!cancel) {\r\n          dispatch({ type: \"FETCH_SUCCESS\", payload: data as GanttTask[] });\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n\r\n        if (!cancel) {\r\n          dispatch({ type: \"FETCH_ERROR\" });\r\n        }\r\n      }\r\n    };\r\n\r\n    init();\r\n\r\n    return () => {\r\n      cancel = true;\r\n    };\r\n  }, []);\r\n\r\n  return [state];\r\n};\r\n\r\nexport { useFetchEvent };\r\n","import React, { useState, useLayoutEffect } from \"react\";\r\nimport { Form, Button, Input, DatePicker, Select } from \"antd\";\r\nconst { Option } = Select;\r\nimport { GanttStatic } from \"dhtmlx-gantt\";\r\n\r\ndeclare var gantt: GanttStatic;\r\n\r\ninterface AppProps {\r\n  onSortByUsername: Function;\r\n}\r\n\r\nconst GanttFilter: React.FC<AppProps> = (props) => {\r\n  let [inputValue, setInputValue] = useState(\"\");\r\n  let [dept, setDept] = useState(\"\");\r\n  let [startTime, setStartTime] = useState(null);\r\n\r\n  // const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n  //   setInputValue(e.target.value);\r\n  // };\r\n\r\n  // 根据人名过滤\r\n  useLayoutEffect(() => {\r\n    const onBeforeTaskDisplay = gantt.attachEvent(\r\n      \"onBeforeTaskDisplay\",\r\n      (id, task) => {\r\n        if (!inputValue) return true;\r\n        return task.username.indexOf(inputValue) > -1;\r\n      },\r\n      {}\r\n    );\r\n    gantt.refreshData();\r\n    return () => {\r\n      gantt.detachEvent(onBeforeTaskDisplay);\r\n    };\r\n  }, [inputValue]);\r\n\r\n  // 根据组织架构过滤\r\n  useLayoutEffect(() => {\r\n    const onBeforeTaskDisplay = gantt.attachEvent(\r\n      \"onBeforeTaskDisplay\",\r\n      (id, task) => {\r\n        if (!dept) return true;\r\n        return task.dept === dept;\r\n      },\r\n      {}\r\n    );\r\n    gantt.refreshData();\r\n    return () => {\r\n      gantt.detachEvent(onBeforeTaskDisplay);\r\n    };\r\n  }, [dept]);\r\n\r\n  const onFinish = (values: any) => {\r\n    setInputValue(values.person);\r\n    gantt.render();\r\n  };\r\n\r\n  const handleSelectChange = (value: any) => {\r\n    console.log(value);\r\n    setDept(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"filter\">\r\n      <Form name=\"搜索\" layout=\"inline\" onFinish={onFinish}>\r\n        <Form.Item name=\"person\" label=\"人员\">\r\n          <Input style={{ width: 150 }} value={inputValue} allowClear />\r\n        </Form.Item>\r\n        {/* <Form.Item name=\"startTime\" label=\"开始日期\">\r\n          <DatePicker name=\"startTime\" value={startTime} />\r\n        </Form.Item> */}\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            搜索\r\n          </Button>\r\n        </Form.Item>\r\n        <Form.Item name=\"dept\" label=\"按组织架构过滤\">\r\n          <Select\r\n            allowClear\r\n            value={dept}\r\n            style={{ width: 150 }}\r\n            onChange={handleSelectChange}\r\n          >\r\n            <Option value=\"产品\">产品</Option>\r\n            <Option value=\"UI\">UI</Option>\r\n            <Option value=\"前端\">前端</Option>\r\n            <Option value=\"erp后台\">erp后台</Option>\r\n            <Option value=\"商城后台\">商城后台</Option>\r\n            <Option value=\"java开发\">java开发</Option>\r\n            <Option value=\"安卓客户端\">安卓客户端</Option>\r\n            <Option value=\"ios客户端\">ios客户端</Option>\r\n            <Option value=\"大数据开发组\">大数据开发组</Option>\r\n            <Option value=\"测试\">测试</Option>\r\n            <Option value=\"技术部\">技术部</Option>\r\n          </Select>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GanttFilter;\r\n","import React, { useState, useLayoutEffect } from \"react\";\r\nimport { Radio, RadioChangeEvent } from \"antd\";\r\nimport { GanttStatic } from \"dhtmlx-gantt\";\r\n\r\ndeclare var gantt: GanttStatic;\r\n\r\ninterface AppProps {\r\n  zoom: string;\r\n  onZoomChange: Function;\r\n}\r\n\r\nconst GanttToolBar: React.FC<AppProps> = (props) => {\r\n  const handleZoomChange = (e: RadioChangeEvent) => {\r\n    props.onZoomChange(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"toolbar\">\r\n      <Radio.Group\r\n        defaultValue={props.zoom}\r\n        buttonStyle=\"solid\"\r\n        onChange={handleZoomChange}\r\n      >\r\n        <Radio.Button value=\"Days\">天</Radio.Button>\r\n        <Radio.Button value=\"Months\">月</Radio.Button>\r\n        <Radio.Button value=\"Years\">年</Radio.Button>\r\n      </Radio.Group>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GanttToolBar;\r\n","import Gantt from './GanttContainer';\r\nimport './Gantt.css';\r\n\r\nexport default Gantt","import React, { useState, useEffect } from \"react\";\r\nimport GanttChart from \"./GanttChart\";\r\nimport { useFetchEvent } from \"./useFetchEvent\";\r\nimport GanttFilter from \"./GanttFilter\";\r\nimport GanttToolBar from \"./GanttToolBar\";\r\n// import Toolbar from '../ToolBar';\r\nimport { GanttStatic } from \"dhtmlx-gantt\";\r\n\r\ndeclare var gantt: GanttStatic;\r\n\r\nconst Gantt: React.FC = () => {\r\n  const [currentZoom, setCurrentZoom] = useState(\"Days\");\r\n  const [data, setData] = useState({});\r\n\r\n  const [state] = useFetchEvent({});\r\n\r\n  console.log(\"state: \", state);\r\n\r\n  useEffect(() => {\r\n    setData(state.data);\r\n  }, [state]);\r\n\r\n  const handleZoomChange = (zoom: string) => {\r\n    setCurrentZoom(zoom);\r\n  };\r\n\r\n  const handleSortByUsername = () => {\r\n    console.log(2);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {state.loading ? (\r\n        <div>Loading ...</div>\r\n      ) : (\r\n        <>\r\n          <div className=\"gantt-header\">\r\n            <GanttFilter onSortByUsername={handleSortByUsername} />\r\n            <GanttToolBar zoom={currentZoom} onZoomChange={handleZoomChange} />\r\n          </div>\r\n          {/* <div className=\"zoom-bar\">\r\n              <Toolbar\r\n                zoom={currentZoom}\r\n              />\r\n            </div> */}\r\n          <GanttChart zoom={currentZoom} data={data} />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Gantt;\r\n","import React from 'react';\r\nimport Gantt from '../Gantt';\r\n// import '../../mock';\r\nimport './App.css';\r\n\r\nconst App: React.FC = () => {\r\n\r\n  return (\r\n    <Gantt />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './component/App/index';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}